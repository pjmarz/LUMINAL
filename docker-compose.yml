name: luminal

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['luminal_default']
  environment:
    - GENERIC_TIMEZONE=${TIMEZONE}
    - TZ=${TIMEZONE}
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    - N8N_RUNNERS_ENABLED=true
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=n8n
    - DB_POSTGRESDB_USER=n8n
    - DB_POSTGRESDB_PASSWORD=n8n
    - DB_POSTGRESDB_SCHEMA=public
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY_FILE=/run/secrets/n8n_encryption_key
    - N8N_USER_MANAGEMENT_JWT_SECRET_FILE=/run/secrets/n8n_jwt_secret
    - OLLAMA_HOST=ollama:11434
    - N8N_SECURE_COOKIE=false
  secrets:
    - n8n_encryption_key
    - n8n_jwt_secret
  labels:
    - "com.centurylinklabs.watchtower.enable=true"
  user: "root"

services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    networks: ['luminal_default']
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB=postgres
    secrets:
      - postgres_password
    volumes:
      - postgres_storage:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U postgres -d postgres']
      interval: 5s
      timeout: 5s
      retries: 10
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    hostname: pgadmin
    networks: ['luminal_default']
    restart: unless-stopped
    ports:
      - 5050:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=petermarino2@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=Westmoreland
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - pgadmin_storage:/var/lib/pgadmin
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - postgres

  n8n:
    <<: *service-n8n
    hostname: n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./secrets:/home/node/.n8n/credentials
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy

  langflow:
    image: langflowai/langflow:latest
    container_name: langflow
    hostname: langflow
    networks: ['luminal_default']
    restart: unless-stopped
    ports:
      - 7860:7860
    volumes:
      - langflow_storage:/app/langflow
    environment:
      - LANGFLOW_DATABASE_URL=postgresql://langflow:langflow@postgres:5432/langflow
      - LANGFLOW_AUTO_LOGIN=true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      postgres:
        condition: service_healthy

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks: ['luminal_default']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    networks: ['luminal_default']
    restart: unless-stopped
    ports:
      - 11434:11434
    volumes:
      - ollama_storage:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
              
  ollama-pull-llama:
    image: ollama/ollama:latest
    networks: ['luminal_default']
    container_name: ollama-pull-llama
    volumes:
      - ollama_storage:/root/.ollama
    entrypoint: /bin/sh
    environment:
      - OLLAMA_HOST=ollama:11434
    command:
      - "-c"
      - "sleep 3; ollama pull llama3.1:8b"
    depends_on:
      - ollama

  ollama-pull-gemma:
    image: ollama/ollama:latest
    networks: ['luminal_default']
    container_name: ollama-pull-gemma
    volumes:
      - ollama_storage:/root/.ollama
    entrypoint: /bin/sh
    environment:
      - OLLAMA_HOST=ollama:11434
    command:
      - "-c"
      - "sleep 6; ollama pull gemma3:12b"
    depends_on:
      - ollama
      - ollama-pull-llama

  ollama-pull-gpt-oss:
    image: ollama/ollama:latest
    networks: ['luminal_default']
    container_name: ollama-pull-gpt-oss
    volumes:
      - ollama_storage:/root/.ollama
    entrypoint: /bin/sh
    environment:
      - OLLAMA_HOST=ollama:11434
    command:
      - "-c"
      - "sleep 9; ollama pull gpt-oss:20b"
    depends_on:
      - ollama
      - ollama-pull-gemma

  openwebui:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: openwebui
    hostname: openwebui
    networks: ['luminal_default']
    restart: unless-stopped
    ports:
      - 3000:8080
    volumes:
      - openwebui_storage:/app/backend/data
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_SECRET_KEY_FILE=/run/secrets/openwebui_secret_key
      - ENABLE_RAG_WEB_SEARCH=true
      - RAG_WEB_SEARCH_ENGINE=searxng
      - VECTOR_DB=qdrant
      - QDRANT_URI=http://qdrant:6333
    secrets:
      - openwebui_secret_key
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - ollama
      - qdrant

  watchtower:
    container_name: watchtower-luminal
    hostname: watchtower-luminal
    image: containrrr/watchtower:latest
    networks: ['luminal_default']
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    command: --interval 3600 --label-enable --cleanup --remove-volumes

networks:
  luminal_default:
    external: true
volumes:
  n8n_storage:
  postgres_storage:
  pgadmin_storage:
  ollama_storage:
  qdrant_storage:
  openwebui_storage:
  langflow_storage:


secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  n8n_encryption_key:
    file: ./secrets/n8n_encryption_key.txt
  n8n_jwt_secret:
    file: ./secrets/n8n_jwt_secret.txt
  openwebui_secret_key:
    file: ./secrets/openwebui_secret_key.txt
  langflow_api_key:
    file: ./secrets/langflow_api_key.txt
  langflow_secret_key:
    file: ./secrets/langflow_secret_key.txt